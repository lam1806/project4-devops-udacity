name: Frontend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'
env:
  NODE_VERSION: 18.x
jobs:
  linting:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - run: npm ci
      - run: npm run lint -- --fix
  testing:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm test
  build_and_push:
    runs-on: ubuntu-latest
    needs: [linting, testing]
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
      - run: docker pull ${{ steps.ecr-login.outputs.registry }}/frontend:latest || true
      - env:
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          REPOSITORY: frontend
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker images
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      - uses: actions/cache@v3
        with:
          path: ~/docker-cache
          key: docker-cache-${{ github.sha }}
          restore-keys: docker-cache-
